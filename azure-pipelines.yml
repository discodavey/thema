trigger:
  branches:
    include:
      - master
      - refs/tags/*

pr: ['*']

pool:
  vmImage: 'ubuntu-latest'

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

stages:
  - stage: Main
    jobs:
      - job: Build
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: 14.x
            displayName: Install Node.js

          - script: npm ci
            displayName: Install dependencies

          - script: |
              npm run check:themes
              npm run lint
            displayName: Run linting

          - script: |
              npm run test:unit -- --coverage
              bash <(curl -s https://codecov.io/bash)
            displayName: Run unit tests

          - script: |
              npm run docs
              npm run test:visual
              argos upload test/screenshots/local -T "$ARGOS_TOKEN"
            displayName: Run visual regression tests
            condition: and(ne('${{ variables.SAUCE_ACCESS_KEY }}', ''), ne('${{ variables.ARGOS_TOKEN }}', ''))

  - stage: Release
    condition: and(succeeded(), eq(variables.isMain, true))
    jobs:
      - job: Release
        steps:
          - script: |
              git config --global user.email "$GIT_AUTHOR_EMAIL"
              git config --global user.name "$GIT_AUTHOR_NAME"
              git remote set-url origin "https://$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" > /dev/null 2>&1
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc 2> /dev/null
            displayName: Configure services

          - script: ASSET_PATH=/thema/ npm run docs
            displayName: 'Build documentation site'

          - script: npx semantic-release
            displayName: 'Publish package'

          - script: |
              git fetch --all
              git checkout --force --track origin-pages/gh-pages
              git branch --set-upstream-to origin-pages/gh-pages
              git reset --hard
              git add -f --all docs
              git commit --message "Deploy documentation to GitHub pages"
              git push --quiet --force
            displayName: 'Deploy to GitHub Pages'
